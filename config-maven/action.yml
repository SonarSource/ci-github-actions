---
name: Config Maven
description: GitHub Action to configure Maven build environment with build number, authentication, and default settings
inputs:
  working-directory:
    description: Relative path under github.workspace to execute the build in
    default: .
  artifactory-reader-role:
    description: Suffix for the Artifactory reader role in Vault.
      Defaults to `private-reader` for private repositories, and `public-reader` for public repositories.
    default: ''
  common-mvn-flags:
    description: Maven flags for all subsequent mvn calls
    default: --batch-mode --no-transfer-progress --errors --fail-at-end --show-version -Dmaven.test.redirectTestOutputToFile=false
  repox-url:
    description: URL for Repox
    default: https://repox.jfrog.io
  repox-artifactory-url:
    description: URL for Repox Artifactory API (overrides repox-url/artifactory if provided)
    default: ''
  use-develocity:
    description: Whether to use Develocity for build tracking.
    default: 'false'
  develocity-url:
    description: URL for Develocity
    default: https://develocity.sonar.build/
  cache-paths:
    description: Cache paths to use (multiline). If provided, overrides the default ~/.m2/repository
    default: ~/.m2/repository
  disable-caching:
    description: Whether to disable Maven caching entirely
    default: 'false'

outputs:
  BUILD_NUMBER:
    description: The current build number. Also set as environment variable BUILD_NUMBER
    value: ${{ steps.get_build_number.outputs.BUILD_NUMBER }}
  current-version:
    description: The project version set in the pom.xml (before replacement). Also set as environment variable CURRENT_VERSION
    value: ${{ steps.config.outputs.current-version }}
  project-version:
    description: The project version with build number (after replacement). Also set as environment variable PROJECT_VERSION
    value: ${{ steps.config.outputs.project-version }}

runs:
  using: composite
  steps:
    - name: Get build number
      id: get_build_number
      uses: SonarSource/ci-github-actions/get-build-number@v1

    - id: from-env
      if: env.CONFIG_MAVEN_COMPLETED != ''
      shell: bash
      run: |
        echo "Action already called by $CONFIG_MAVEN_COMPLETED, execution skipped."
        echo "skip=true" >> $GITHUB_OUTPUT

    - name: Set parameter for Vault
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      env:
        ARTIFACTORY_READER_ROLE: ${{ inputs.artifactory-reader-role != '' && inputs.artifactory-reader-role ||
          (github.event.repository.visibility == 'public' && 'public-reader' || 'private-reader') }}
      run: |
        echo "ARTIFACTORY_READER_ROLE=${ARTIFACTORY_READER_ROLE}" >> "$GITHUB_ENV"
    - name: Get secrets from Vault
      if: steps.from-env.outputs.skip != 'true'
      id: secrets
      uses: SonarSource/vault-action-wrapper@320bd31b03e5dacaac6be51bbbb15adf7caccc32 # 3.1.0
      with:
        secrets: |
          development/artifactory/token/{REPO_OWNER_NAME_DASH}-${{ env.ARTIFACTORY_READER_ROLE }} username | ARTIFACTORY_USERNAME;
          development/artifactory/token/{REPO_OWNER_NAME_DASH}-${{ env.ARTIFACTORY_READER_ROLE }} access_token | ARTIFACTORY_ACCESS_TOKEN;
          ${{ inputs.use-develocity == 'true' && 'development/kv/data/develocity token | DEVELOCITY_TOKEN;' || '' }}

    - name: Set environment variables for Artifactory authentication
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      env:
        ARTIFACTORY_URL: ${{ inputs.repox-artifactory-url != '' && inputs.repox-artifactory-url ||
          format('{0}/artifactory', inputs.repox-url) }}
        ARTIFACTORY_USERNAME: ${{ steps.secrets.outputs.vault && fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME || '' }}
        ARTIFACTORY_ACCESS_TOKEN: ${{ steps.secrets.outputs.vault && fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN || '' }}
        DEVELOCITY_ACCESS_KEY: ${{ inputs.use-develocity == 'true' && steps.secrets.outputs.vault &&
          fromJSON(steps.secrets.outputs.vault).DEVELOCITY_TOKEN || '' }}
      run: |
        echo "ARTIFACTORY_URL=$ARTIFACTORY_URL" >> "$GITHUB_ENV"
        echo "ARTIFACTORY_USERNAME=$ARTIFACTORY_USERNAME" >> "$GITHUB_ENV"
        echo "ARTIFACTORY_ACCESS_USERNAME=$ARTIFACTORY_USERNAME" >> "$GITHUB_ENV"  # deprecated, backward compliance
        echo "ARTIFACTORY_ACCESS_TOKEN=$ARTIFACTORY_ACCESS_TOKEN" >> "$GITHUB_ENV"
        echo "ARTIFACTORY_PASSWORD=$ARTIFACTORY_ACCESS_TOKEN" >> "$GITHUB_ENV"  # deprecated, backward compliance
        if [ "$DEVELOCITY_ACCESS_KEY" != "" ]; then
          echo "DEVELOCITY_ACCESS_KEY=develocity.sonar.build=$DEVELOCITY_ACCESS_KEY" >> "$GITHUB_ENV"
        fi

    - name: Configure Maven settings and set repository URL
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      run: |
        MAVEN_CONFIG="$HOME/.m2"
        mkdir -p "$MAVEN_CONFIG"
        cp "${GITHUB_ACTION_PATH}/resources/settings.xml" "$MAVEN_CONFIG/settings.xml"
        echo "Copied Maven settings from ${GITHUB_ACTION_PATH}/resources/settings.xml to $MAVEN_CONFIG/settings.xml"
        echo "SONARSOURCE_REPOSITORY_URL=$ARTIFACTORY_URL/sonarsource-qa" >> "$GITHUB_ENV"

    - name: Cache local Maven repository
      uses: SonarSource/ci-github-actions/cache@v1
      if: steps.from-env.outputs.skip != 'true' && inputs.disable-caching == 'false'
      with:
        path: |-
          ${{ inputs.cache-paths }}
        key: maven-${{ runner.os }}-${{ github.workflow }}-${{ hashFiles(format('{0}/**/pom.xml', inputs.working-directory)) }}
        restore-keys: maven-${{ runner.os }}-${{ github.workflow }}-

    - name: Update project version and set current-version and project-version variables
      id: config
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: ${GITHUB_ACTION_PATH}/set_maven_project_version.sh

    - name: Create mvn wrapper function with common Maven flags and set MAVEN_OPTS
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      env:
        COMMON_MVN_FLAGS: ${{ inputs.common-mvn-flags }}
      run: |
        # - 'command mvn' prevents the function from calling itself in a loop.
        echo 'mvn() { command mvn ${{ env.COMMON_MVN_FLAGS }} "$@"; }' >> "$HOME/.bash_profile"
        echo "BASH_ENV=$HOME/.bash_profile" >> "$GITHUB_ENV"
        echo "MAVEN_OPTS=${MAVEN_OPTS:=-Xmx1536m -Xms128m}" >> "$GITHUB_ENV"
        echo "CONFIG_MAVEN_COMPLETED=$GITHUB_ACTION" >> "$GITHUB_ENV"
