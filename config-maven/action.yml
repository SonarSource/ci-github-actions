---
name: Config Maven
description: GitHub Action to configure Maven build environment with build number, authentication, and default settings
inputs:
  working-directory:
    description: Relative path under github.workspace to execute the build in
    default: .
  artifactory-reader-role:
    description: Suffix for the Artifactory reader role in Vault.
      Defaults to `private-reader` for private repositories, and `public-reader` for public repositories.
    default: ''
  common-mvn-flags:
    description: Maven flags for all subsequent mvn calls
    default: --batch-mode --no-transfer-progress --errors --fail-at-end --show-version -Dmaven.test.redirectTestOutputToFile=false
  repox-url:
    description: URL for Repox
    default: https://repox.jfrog.io
  repox-artifactory-url:
    description: URL for Repox Artifactory API (overrides repox-url/artifactory if provided)
    default: ''
  use-develocity:
    description: Whether to use Develocity for build tracking.
    default: 'false'
  develocity-url:
    description: URL for Develocity
    default: https://develocity.sonar.build/
  cache-paths:
    description: Cache paths to use (multiline). If provided, overrides the default ~/.m2/repository
    default: ~/.m2/repository
  disable-caching:
    description: Whether to disable Maven caching entirely
    default: 'false'
  host-actions-root:
    description: Path to the actions folder on the host (used when called from another local action)
    default: ''

outputs:
  BUILD_NUMBER:
    description: The current build number. Also set as environment variable BUILD_NUMBER
    value: ${{ steps.get_build_number.outputs.BUILD_NUMBER }}
  current-version:
    description: The project version set in the pom.xml (before replacement). Also set as environment variable CURRENT_VERSION
    value: ${{ steps.config.outputs.current-version }}
  project-version:
    description: The project version with build number (after replacement). Also set as environment variable PROJECT_VERSION
    value: ${{ steps.config.outputs.project-version }}

runs:
  using: composite
  steps:
    - name: Set local action paths
      id: set-path
      shell: bash
      run: |
        echo "::group::Fix for using local actions"
        echo "GITHUB_ACTION_PATH=$GITHUB_ACTION_PATH"
        echo "github.action_path=${{ github.action_path }}"
        ACTION_PATH_CONFIG_MAVEN="${{ github.action_path }}"
        host_actions_root="${{ inputs.host-actions-root }}"
        if [ -z "$host_actions_root" ]; then
          host_actions_root="$(dirname "$ACTION_PATH_CONFIG_MAVEN")"
        else
          ACTION_PATH_CONFIG_MAVEN="$host_actions_root/config-maven"
        fi
        echo "ACTION_PATH_CONFIG_MAVEN=$ACTION_PATH_CONFIG_MAVEN"
        echo "ACTION_PATH_CONFIG_MAVEN=$ACTION_PATH_CONFIG_MAVEN" >> "$GITHUB_ENV"
        echo "host_actions_root=$host_actions_root" >> "$GITHUB_OUTPUT"

        mkdir -p ".actions"
        ln -sf "$host_actions_root/get-build-number" .actions/get-build-number
        ln -sf "$host_actions_root/cache" .actions/cache
        ln -sf "$host_actions_root/shared" .actions/shared
        ls -la .actions/*
        echo "::endgroup::"

    - uses: ./.actions/get-build-number
      id: get_build_number
      with:
        host-actions-root: ${{ steps.set-path.outputs.host_actions_root }}

    - id: from-env
      if: env.CONFIG_MAVEN_COMPLETED != ''
      shell: bash
      run: |
        echo "Action already called by $CONFIG_MAVEN_COMPLETED, execution skipped."
        echo "skip=true" >> $GITHUB_OUTPUT

    - name: Set parameter for Vault
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      env:
        ARTIFACTORY_READER_ROLE: ${{ inputs.artifactory-reader-role != '' && inputs.artifactory-reader-role ||
          (github.event.repository.visibility == 'public' && 'public-reader' || 'private-reader') }}
      run: |
        echo "ARTIFACTORY_READER_ROLE=${ARTIFACTORY_READER_ROLE}" >> "$GITHUB_ENV"
    - uses: SonarSource/vault-action-wrapper@320bd31b03e5dacaac6be51bbbb15adf7caccc32 # 3.1.0
      if: steps.from-env.outputs.skip != 'true'
      id: secrets
      with:
        secrets: |
          development/artifactory/token/{REPO_OWNER_NAME_DASH}-${{ env.ARTIFACTORY_READER_ROLE }} username | ARTIFACTORY_USERNAME;
          development/artifactory/token/{REPO_OWNER_NAME_DASH}-${{ env.ARTIFACTORY_READER_ROLE }} access_token | ARTIFACTORY_ACCESS_TOKEN;
          ${{ inputs.use-develocity == 'true' && 'development/kv/data/develocity token | DEVELOCITY_TOKEN;' || '' }}

    - name: Set environment variables for Artifactory authentication
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      env:
        ARTIFACTORY_URL: ${{ inputs.repox-artifactory-url != '' && inputs.repox-artifactory-url ||
          format('{0}/artifactory', inputs.repox-url) }}
        ARTIFACTORY_USERNAME: ${{ steps.secrets.outputs.vault && fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_USERNAME || '' }}
        ARTIFACTORY_ACCESS_TOKEN: ${{ steps.secrets.outputs.vault && fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN || '' }}
        DEVELOCITY_TOKEN: ${{ inputs.use-develocity == 'true' && steps.secrets.outputs.vault &&
          fromJSON(steps.secrets.outputs.vault).DEVELOCITY_TOKEN || '' }}
      run: |
        if [[ "${DEVELOCITY_ACCESS_KEY:-}" == "develocity.sonar.build=" ]]; then
          echo "::warning title=Found invalid DEVELOCITY_ACCESS_KEY::DEVELOCITY_ACCESS_KEY should not be set manually in the environment."
          echo "[WARNING] DEVELOCITY_ACCESS_KEY is set in the environment with an empty token. This is a deprecated configuration." \
          "The Develocity token is configured by config-maven. Please remove external configuration of DEVELOCITY_ACCESS_KEY."
        fi

        echo "ARTIFACTORY_URL=$ARTIFACTORY_URL" >> "$GITHUB_ENV"
        echo "ARTIFACTORY_USERNAME=$ARTIFACTORY_USERNAME" >> "$GITHUB_ENV"
        echo "ARTIFACTORY_ACCESS_USERNAME=$ARTIFACTORY_USERNAME" >> "$GITHUB_ENV"  # deprecated, backward compliance
        echo "ARTIFACTORY_ACCESS_TOKEN=$ARTIFACTORY_ACCESS_TOKEN" >> "$GITHUB_ENV"
        echo "ARTIFACTORY_PASSWORD=$ARTIFACTORY_ACCESS_TOKEN" >> "$GITHUB_ENV"  # deprecated, backward compliance
        if [[ -n "${DEVELOCITY_TOKEN:-}" ]]; then
          echo "DEVELOCITY_ACCESS_KEY=develocity.sonar.build=$DEVELOCITY_TOKEN" >> "$GITHUB_ENV"
        fi

    - name: Configure Maven settings and set repository URL
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      run: |
        MAVEN_CONFIG="$HOME/.m2"
        mkdir -p "$MAVEN_CONFIG"
        cp "${ACTION_PATH_CONFIG_MAVEN}/resources/settings.xml" "$MAVEN_CONFIG/settings.xml"
        echo "Copied Maven settings from ${ACTION_PATH_CONFIG_MAVEN}/resources/settings.xml to $MAVEN_CONFIG/settings.xml"
        echo "MAVEN_CONFIG=$MAVEN_CONFIG" >> "$GITHUB_ENV"
        echo "SONARSOURCE_REPOSITORY_URL=$ARTIFACTORY_URL/sonarsource-qa" >> "$GITHUB_ENV"

    - name: Cache local Maven repository
      uses: ./.actions/cache
      if: steps.from-env.outputs.skip != 'true' && inputs.disable-caching == 'false'
      with:
        path: |-
          ${{ inputs.cache-paths }}
        key: maven-${{ runner.os }}-${{ github.workflow }}-${{ hashFiles(format('{0}/**/pom.xml', inputs.working-directory)) }}
        restore-keys: maven-${{ runner.os }}-${{ github.workflow }}-

    - name: Update project version and set current-version and project-version variables
      id: config
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "pwd: $(pwd)"
        env|grep HOME
        echo "user.home: $(mvn -q -Dexec.executable="echo" -Dexec.args="\${user.home}" \
          --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)"
        echo "env.HOME: $(mvn -q -Dexec.executable="echo" -Dexec.args="\${env.HOME}" \
          --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)"
        $ACTION_PATH_CONFIG_MAVEN/set_maven_project_version.sh

    - name: Deactivate UseContainerSupport on github-ubuntu-* runners
      if: runner.os == 'Linux' && runner.environment == 'github-hosted' && steps.from-env.outputs.skip != 'true'
      shell: bash
      run: |
        echo "::warning title=Deactivating UseContainerSupport::The GitHub-hosted Ubuntu runners have an issue with Java's" \
          "UseContainerSupport feature."
        echo "JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS:=-XX:-UseContainerSupport}" >> "$GITHUB_ENV"

    - name: Create mvn wrapper function with common Maven flags and set MAVEN_OPTS
      if: steps.from-env.outputs.skip != 'true'
      shell: bash
      env:
        COMMON_MVN_FLAGS: ${{ inputs.common-mvn-flags }}
      run: |
        # - 'command mvn' prevents the function from calling itself in a loop.
        echo 'mvn() { command mvn ${{ env.COMMON_MVN_FLAGS }} "$@"; }' >> "$HOME/.bash_profile"
        echo "BASH_ENV=$HOME/.bash_profile" >> "$GITHUB_ENV"
        echo "MAVEN_OPTS=${MAVEN_OPTS:=-Xmx1536m -Xms128m}" >> "$GITHUB_ENV"
        echo "CONFIG_MAVEN_COMPLETED=$GITHUB_ACTION" >> "$GITHUB_ENV"
